{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedback","Section","title","children","className","styles","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Notification","message","App","state","getOptionsValues","Object","keys","setState","prevState","countTotalFeedback","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,+KCqBbC,EAtBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,+BACE,wCACQ,+BAAOJ,OAEf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,OAEhB,qDACqB,+BAAOC,IAD5B,Y,gBCJSC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCSQI,EAbS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACnB,wBAEEC,KAAK,SACLR,UAAWC,IAAOQ,OAClBC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GALIA,O,gBCCII,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGZ,UAAWC,IAAOW,QAArB,SAA+BA,KCIlCC,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAOPqB,iBAAmB,kBAAMC,OAAOC,KAAK,EAAKH,Q,EAE1CT,gBAAkB,SAACE,GACjB,EAAKW,UAAS,SAACC,GACb,OAAO,eAAGZ,EAASY,EAAUZ,GAAU,O,EAI3Ca,mBAAqB,WAKnB,OAHoBJ,OAAOK,OAAO,EAAKP,OAAOQ,QAC5C,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,M,EAKjDC,gCAAkC,WAChC,IAAQjC,EAAS,EAAKsB,MAAdtB,KAIR,OAHiCkC,KAAKC,MACpCnC,GAAoC,IAA5B,EAAK4B,wBAEsB,G,4CAGvC,WACE,MAA+BQ,KAAKd,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,wDACA,cAAC,EAAD,CAASI,MAAM,yDAAf,SACE,cAAC,EAAD,CACEM,QAASwB,KAAKb,mBACdV,gBAAiBuB,KAAKvB,oBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACG8B,KAAKR,qBAAuB,EAC3B,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKR,qBACZxB,iBAAkBgC,KAAKH,oCAGzB,cAAC,EAAD,CAAcb,QAAQ,+B,GAzDhBiB,aAAZhB,EAOGiB,aAAe,GA0DTjB,QClEfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c88f96c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","const Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\n  return (\n    <ul>\n      <li>\n        Good: <span>{good}</span>\n      </li>\n      <li>\n        Neutral: <span>{neutral}</span>\n      </li>\n      <li>\n        Bad: <span>{bad}</span>\n      </li>\n      <li>\n        Total: <span>{total}</span>\n      </li>\n      <li>\n        Positive feedback: <span>{positiveFeedback}</span> %\n      </li>\n    </ul>\n  );\n};\n\nexport default Statistics;\n","import styles from '../Section/Section.module.css'\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import styles from \"../FeedbackOptions/FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return options.map((option) => (\n    <button\n      key={option}\n      type=\"button\"\n      className={styles.button}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n};\n\nexport default FeedbackOptions;\n","import styles from '../Notification/Notification.module.css'\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  getOptionsValues = () => Object.keys(this.state);\n\n  onLeaveFeedback = (option) => {\n    this.setState((prevState) => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    //общеe количествo собранных отзывов из всех категорий\n    let totalFeedback = Object.values(this.state).reduce(\n      (accumulator, currentValue) => accumulator + currentValue\n    );\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    let positiveFeedbackPercentage = Math.round(\n      good / (this.countTotalFeedback() * 0.01)\n    );\n    return positiveFeedbackPercentage || 0; // || возвращает выражение справа, если левая часть ложная\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <h1> Our visitors feedback</h1>\n        <Section title=\"Please, leave your feedback! This is important for us!\">\n          <FeedbackOptions\n            options={this.getOptionsValues()}\n            onLeaveFeedback={this.onLeaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"STATISTICS\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}